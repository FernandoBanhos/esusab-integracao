/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace br.gov.saude.esusab.ras.common
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class ProblemaCondicaoThrift : TBase
  {
    private string _uuidProblema;
    private string _uuidEvolucaoProblema;
    private long _coSequencialEvolucao;
    private string _ciap;
    private string _cid10;
    private long _situacao;
    private long _dataInicioProblema;
    private long _dataFimProblema;
    private bool _isAvaliado;

    public string UuidProblema
    {
      get
      {
        return _uuidProblema;
      }
      set
      {
        __isset.uuidProblema = true;
        this._uuidProblema = value;
      }
    }

    public string UuidEvolucaoProblema
    {
      get
      {
        return _uuidEvolucaoProblema;
      }
      set
      {
        __isset.uuidEvolucaoProblema = true;
        this._uuidEvolucaoProblema = value;
      }
    }

    public long CoSequencialEvolucao
    {
      get
      {
        return _coSequencialEvolucao;
      }
      set
      {
        __isset.coSequencialEvolucao = true;
        this._coSequencialEvolucao = value;
      }
    }

    public string Ciap
    {
      get
      {
        return _ciap;
      }
      set
      {
        __isset.ciap = true;
        this._ciap = value;
      }
    }

    public string Cid10
    {
      get
      {
        return _cid10;
      }
      set
      {
        __isset.cid10 = true;
        this._cid10 = value;
      }
    }

    public long Situacao
    {
      get
      {
        return _situacao;
      }
      set
      {
        __isset.situacao = true;
        this._situacao = value;
      }
    }

    public long DataInicioProblema
    {
      get
      {
        return _dataInicioProblema;
      }
      set
      {
        __isset.dataInicioProblema = true;
        this._dataInicioProblema = value;
      }
    }

    public long DataFimProblema
    {
      get
      {
        return _dataFimProblema;
      }
      set
      {
        __isset.dataFimProblema = true;
        this._dataFimProblema = value;
      }
    }

    public bool IsAvaliado
    {
      get
      {
        return _isAvaliado;
      }
      set
      {
        __isset.isAvaliado = true;
        this._isAvaliado = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool uuidProblema;
      public bool uuidEvolucaoProblema;
      public bool coSequencialEvolucao;
      public bool ciap;
      public bool cid10;
      public bool situacao;
      public bool dataInicioProblema;
      public bool dataFimProblema;
      public bool isAvaliado;
    }

    public ProblemaCondicaoThrift() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                UuidProblema = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                UuidEvolucaoProblema = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.I64) {
                CoSequencialEvolucao = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.String) {
                Ciap = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.String) {
                Cid10 = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 6:
              if (field.Type == TType.I64) {
                Situacao = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 7:
              if (field.Type == TType.I64) {
                DataInicioProblema = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 8:
              if (field.Type == TType.I64) {
                DataFimProblema = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 9:
              if (field.Type == TType.Bool) {
                IsAvaliado = iprot.ReadBool();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("ProblemaCondicaoThrift");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (UuidProblema != null && __isset.uuidProblema) {
          field.Name = "uuidProblema";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(UuidProblema);
          oprot.WriteFieldEnd();
        }
        if (UuidEvolucaoProblema != null && __isset.uuidEvolucaoProblema) {
          field.Name = "uuidEvolucaoProblema";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(UuidEvolucaoProblema);
          oprot.WriteFieldEnd();
        }
        if (__isset.coSequencialEvolucao) {
          field.Name = "coSequencialEvolucao";
          field.Type = TType.I64;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(CoSequencialEvolucao);
          oprot.WriteFieldEnd();
        }
        if (Ciap != null && __isset.ciap) {
          field.Name = "ciap";
          field.Type = TType.String;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Ciap);
          oprot.WriteFieldEnd();
        }
        if (Cid10 != null && __isset.cid10) {
          field.Name = "cid10";
          field.Type = TType.String;
          field.ID = 5;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Cid10);
          oprot.WriteFieldEnd();
        }
        if (__isset.situacao) {
          field.Name = "situacao";
          field.Type = TType.I64;
          field.ID = 6;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(Situacao);
          oprot.WriteFieldEnd();
        }
        if (__isset.dataInicioProblema) {
          field.Name = "dataInicioProblema";
          field.Type = TType.I64;
          field.ID = 7;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(DataInicioProblema);
          oprot.WriteFieldEnd();
        }
        if (__isset.dataFimProblema) {
          field.Name = "dataFimProblema";
          field.Type = TType.I64;
          field.ID = 8;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(DataFimProblema);
          oprot.WriteFieldEnd();
        }
        if (__isset.isAvaliado) {
          field.Name = "isAvaliado";
          field.Type = TType.Bool;
          field.ID = 9;
          oprot.WriteFieldBegin(field);
          oprot.WriteBool(IsAvaliado);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("ProblemaCondicaoThrift(");
      bool __first = true;
      if (UuidProblema != null && __isset.uuidProblema) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("UuidProblema: ");
        __sb.Append(UuidProblema);
      }
      if (UuidEvolucaoProblema != null && __isset.uuidEvolucaoProblema) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("UuidEvolucaoProblema: ");
        __sb.Append(UuidEvolucaoProblema);
      }
      if (__isset.coSequencialEvolucao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CoSequencialEvolucao: ");
        __sb.Append(CoSequencialEvolucao);
      }
      if (Ciap != null && __isset.ciap) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Ciap: ");
        __sb.Append(Ciap);
      }
      if (Cid10 != null && __isset.cid10) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Cid10: ");
        __sb.Append(Cid10);
      }
      if (__isset.situacao) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Situacao: ");
        __sb.Append(Situacao);
      }
      if (__isset.dataInicioProblema) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("DataInicioProblema: ");
        __sb.Append(DataInicioProblema);
      }
      if (__isset.dataFimProblema) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("DataFimProblema: ");
        __sb.Append(DataFimProblema);
      }
      if (__isset.isAvaliado) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("IsAvaliado: ");
        __sb.Append(IsAvaliado);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
