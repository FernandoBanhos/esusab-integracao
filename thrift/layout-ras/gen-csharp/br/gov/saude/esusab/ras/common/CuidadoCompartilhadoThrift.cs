/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace br.gov.saude.esusab.ras.common
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class CuidadoCompartilhadoThrift : TBase
  {
    private br.gov.saude.esusab.ras.common.LotacaoThrift _lotacaoEvolucao;
    private long _dataEvolucao;
    private long _dataEvolucaoAnterior;
    private int _coSequencialEvolucao;
    private long _condutaEvolucao;
    private int _tpCdsOrigem;
    private string _cnsCidadao;
    private string _cpfCidadao;
    private long _sexoCidadao;
    private string _dataNascimentoCidadao;
    private br.gov.saude.esusab.ras.common.LotacaoThrift _solicitante;
    private br.gov.saude.esusab.ras.common.LotacaoThrift _executante;
    private long _dataCriacaoCuidado;
    private string _cid10;
    private string _ciap;
    private string _uuidFichaOrigem;
    private int _tpDadoTranspFichaOrigem;
    private int _prioridadeCuidado;
    private int _reclassificacaoPrioridadeCuidado;

    public string UuidEvolucao { get; set; }

    public br.gov.saude.esusab.ras.common.LotacaoThrift LotacaoEvolucao
    {
      get
      {
        return _lotacaoEvolucao;
      }
      set
      {
        __isset.lotacaoEvolucao = true;
        this._lotacaoEvolucao = value;
      }
    }

    public long DataEvolucao
    {
      get
      {
        return _dataEvolucao;
      }
      set
      {
        __isset.dataEvolucao = true;
        this._dataEvolucao = value;
      }
    }

    public long DataEvolucaoAnterior
    {
      get
      {
        return _dataEvolucaoAnterior;
      }
      set
      {
        __isset.dataEvolucaoAnterior = true;
        this._dataEvolucaoAnterior = value;
      }
    }

    public int CoSequencialEvolucao
    {
      get
      {
        return _coSequencialEvolucao;
      }
      set
      {
        __isset.coSequencialEvolucao = true;
        this._coSequencialEvolucao = value;
      }
    }

    public long CondutaEvolucao
    {
      get
      {
        return _condutaEvolucao;
      }
      set
      {
        __isset.condutaEvolucao = true;
        this._condutaEvolucao = value;
      }
    }

    public int TpCdsOrigem
    {
      get
      {
        return _tpCdsOrigem;
      }
      set
      {
        __isset.tpCdsOrigem = true;
        this._tpCdsOrigem = value;
      }
    }

    public string CnsCidadao
    {
      get
      {
        return _cnsCidadao;
      }
      set
      {
        __isset.cnsCidadao = true;
        this._cnsCidadao = value;
      }
    }

    public string CpfCidadao
    {
      get
      {
        return _cpfCidadao;
      }
      set
      {
        __isset.cpfCidadao = true;
        this._cpfCidadao = value;
      }
    }

    public long SexoCidadao
    {
      get
      {
        return _sexoCidadao;
      }
      set
      {
        __isset.sexoCidadao = true;
        this._sexoCidadao = value;
      }
    }

    public string DataNascimentoCidadao
    {
      get
      {
        return _dataNascimentoCidadao;
      }
      set
      {
        __isset.dataNascimentoCidadao = true;
        this._dataNascimentoCidadao = value;
      }
    }

    public string UuidCuidadoCompartilhado { get; set; }

    public br.gov.saude.esusab.ras.common.LotacaoThrift Solicitante
    {
      get
      {
        return _solicitante;
      }
      set
      {
        __isset.solicitante = true;
        this._solicitante = value;
      }
    }

    public br.gov.saude.esusab.ras.common.LotacaoThrift Executante
    {
      get
      {
        return _executante;
      }
      set
      {
        __isset.executante = true;
        this._executante = value;
      }
    }

    public long DataCriacaoCuidado
    {
      get
      {
        return _dataCriacaoCuidado;
      }
      set
      {
        __isset.dataCriacaoCuidado = true;
        this._dataCriacaoCuidado = value;
      }
    }

    public string Cid10
    {
      get
      {
        return _cid10;
      }
      set
      {
        __isset.cid10 = true;
        this._cid10 = value;
      }
    }

    public string Ciap
    {
      get
      {
        return _ciap;
      }
      set
      {
        __isset.ciap = true;
        this._ciap = value;
      }
    }

    public string UuidFichaOrigem
    {
      get
      {
        return _uuidFichaOrigem;
      }
      set
      {
        __isset.uuidFichaOrigem = true;
        this._uuidFichaOrigem = value;
      }
    }

    public int TpDadoTranspFichaOrigem
    {
      get
      {
        return _tpDadoTranspFichaOrigem;
      }
      set
      {
        __isset.tpDadoTranspFichaOrigem = true;
        this._tpDadoTranspFichaOrigem = value;
      }
    }

    public int PrioridadeCuidado
    {
      get
      {
        return _prioridadeCuidado;
      }
      set
      {
        __isset.prioridadeCuidado = true;
        this._prioridadeCuidado = value;
      }
    }

    public int ReclassificacaoPrioridadeCuidado
    {
      get
      {
        return _reclassificacaoPrioridadeCuidado;
      }
      set
      {
        __isset.reclassificacaoPrioridadeCuidado = true;
        this._reclassificacaoPrioridadeCuidado = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool lotacaoEvolucao;
      public bool dataEvolucao;
      public bool dataEvolucaoAnterior;
      public bool coSequencialEvolucao;
      public bool condutaEvolucao;
      public bool tpCdsOrigem;
      public bool cnsCidadao;
      public bool cpfCidadao;
      public bool sexoCidadao;
      public bool dataNascimentoCidadao;
      public bool solicitante;
      public bool executante;
      public bool dataCriacaoCuidado;
      public bool cid10;
      public bool ciap;
      public bool uuidFichaOrigem;
      public bool tpDadoTranspFichaOrigem;
      public bool prioridadeCuidado;
      public bool reclassificacaoPrioridadeCuidado;
    }

    public CuidadoCompartilhadoThrift() {
    }

    public CuidadoCompartilhadoThrift(string uuidEvolucao, string uuidCuidadoCompartilhado) : this() {
      this.UuidEvolucao = uuidEvolucao;
      this.UuidCuidadoCompartilhado = uuidCuidadoCompartilhado;
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        bool isset_uuidEvolucao = false;
        bool isset_uuidCuidadoCompartilhado = false;
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                UuidEvolucao = iprot.ReadString();
                isset_uuidEvolucao = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.Struct) {
                LotacaoEvolucao = new br.gov.saude.esusab.ras.common.LotacaoThrift();
                LotacaoEvolucao.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.I64) {
                DataEvolucao = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.I64) {
                DataEvolucaoAnterior = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.I32) {
                CoSequencialEvolucao = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 6:
              if (field.Type == TType.I64) {
                CondutaEvolucao = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 7:
              if (field.Type == TType.I32) {
                TpCdsOrigem = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 8:
              if (field.Type == TType.String) {
                CnsCidadao = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 9:
              if (field.Type == TType.String) {
                CpfCidadao = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 10:
              if (field.Type == TType.I64) {
                SexoCidadao = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 11:
              if (field.Type == TType.String) {
                DataNascimentoCidadao = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 12:
              if (field.Type == TType.String) {
                UuidCuidadoCompartilhado = iprot.ReadString();
                isset_uuidCuidadoCompartilhado = true;
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 13:
              if (field.Type == TType.Struct) {
                Solicitante = new br.gov.saude.esusab.ras.common.LotacaoThrift();
                Solicitante.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 14:
              if (field.Type == TType.Struct) {
                Executante = new br.gov.saude.esusab.ras.common.LotacaoThrift();
                Executante.Read(iprot);
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 15:
              if (field.Type == TType.I64) {
                DataCriacaoCuidado = iprot.ReadI64();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 16:
              if (field.Type == TType.String) {
                Cid10 = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 17:
              if (field.Type == TType.String) {
                Ciap = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 18:
              if (field.Type == TType.String) {
                UuidFichaOrigem = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 19:
              if (field.Type == TType.I32) {
                TpDadoTranspFichaOrigem = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 20:
              if (field.Type == TType.I32) {
                PrioridadeCuidado = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 21:
              if (field.Type == TType.I32) {
                ReclassificacaoPrioridadeCuidado = iprot.ReadI32();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
        if (!isset_uuidEvolucao)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
        if (!isset_uuidCuidadoCompartilhado)
          throw new TProtocolException(TProtocolException.INVALID_DATA);
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("CuidadoCompartilhadoThrift");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        field.Name = "uuidEvolucao";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(UuidEvolucao);
        oprot.WriteFieldEnd();
        if (LotacaoEvolucao != null && __isset.lotacaoEvolucao) {
          field.Name = "lotacaoEvolucao";
          field.Type = TType.Struct;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          LotacaoEvolucao.Write(oprot);
          oprot.WriteFieldEnd();
        }
        if (__isset.dataEvolucao) {
          field.Name = "dataEvolucao";
          field.Type = TType.I64;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(DataEvolucao);
          oprot.WriteFieldEnd();
        }
        if (__isset.dataEvolucaoAnterior) {
          field.Name = "dataEvolucaoAnterior";
          field.Type = TType.I64;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(DataEvolucaoAnterior);
          oprot.WriteFieldEnd();
        }
        if (__isset.coSequencialEvolucao) {
          field.Name = "coSequencialEvolucao";
          field.Type = TType.I32;
          field.ID = 5;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(CoSequencialEvolucao);
          oprot.WriteFieldEnd();
        }
        if (__isset.condutaEvolucao) {
          field.Name = "condutaEvolucao";
          field.Type = TType.I64;
          field.ID = 6;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(CondutaEvolucao);
          oprot.WriteFieldEnd();
        }
        if (__isset.tpCdsOrigem) {
          field.Name = "tpCdsOrigem";
          field.Type = TType.I32;
          field.ID = 7;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(TpCdsOrigem);
          oprot.WriteFieldEnd();
        }
        if (CnsCidadao != null && __isset.cnsCidadao) {
          field.Name = "cnsCidadao";
          field.Type = TType.String;
          field.ID = 8;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(CnsCidadao);
          oprot.WriteFieldEnd();
        }
        if (CpfCidadao != null && __isset.cpfCidadao) {
          field.Name = "cpfCidadao";
          field.Type = TType.String;
          field.ID = 9;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(CpfCidadao);
          oprot.WriteFieldEnd();
        }
        if (__isset.sexoCidadao) {
          field.Name = "sexoCidadao";
          field.Type = TType.I64;
          field.ID = 10;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(SexoCidadao);
          oprot.WriteFieldEnd();
        }
        if (DataNascimentoCidadao != null && __isset.dataNascimentoCidadao) {
          field.Name = "dataNascimentoCidadao";
          field.Type = TType.String;
          field.ID = 11;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(DataNascimentoCidadao);
          oprot.WriteFieldEnd();
        }
        field.Name = "uuidCuidadoCompartilhado";
        field.Type = TType.String;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(UuidCuidadoCompartilhado);
        oprot.WriteFieldEnd();
        if (Solicitante != null && __isset.solicitante) {
          field.Name = "solicitante";
          field.Type = TType.Struct;
          field.ID = 13;
          oprot.WriteFieldBegin(field);
          Solicitante.Write(oprot);
          oprot.WriteFieldEnd();
        }
        if (Executante != null && __isset.executante) {
          field.Name = "executante";
          field.Type = TType.Struct;
          field.ID = 14;
          oprot.WriteFieldBegin(field);
          Executante.Write(oprot);
          oprot.WriteFieldEnd();
        }
        if (__isset.dataCriacaoCuidado) {
          field.Name = "dataCriacaoCuidado";
          field.Type = TType.I64;
          field.ID = 15;
          oprot.WriteFieldBegin(field);
          oprot.WriteI64(DataCriacaoCuidado);
          oprot.WriteFieldEnd();
        }
        if (Cid10 != null && __isset.cid10) {
          field.Name = "cid10";
          field.Type = TType.String;
          field.ID = 16;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Cid10);
          oprot.WriteFieldEnd();
        }
        if (Ciap != null && __isset.ciap) {
          field.Name = "ciap";
          field.Type = TType.String;
          field.ID = 17;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Ciap);
          oprot.WriteFieldEnd();
        }
        if (UuidFichaOrigem != null && __isset.uuidFichaOrigem) {
          field.Name = "uuidFichaOrigem";
          field.Type = TType.String;
          field.ID = 18;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(UuidFichaOrigem);
          oprot.WriteFieldEnd();
        }
        if (__isset.tpDadoTranspFichaOrigem) {
          field.Name = "tpDadoTranspFichaOrigem";
          field.Type = TType.I32;
          field.ID = 19;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(TpDadoTranspFichaOrigem);
          oprot.WriteFieldEnd();
        }
        if (__isset.prioridadeCuidado) {
          field.Name = "prioridadeCuidado";
          field.Type = TType.I32;
          field.ID = 20;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(PrioridadeCuidado);
          oprot.WriteFieldEnd();
        }
        if (__isset.reclassificacaoPrioridadeCuidado) {
          field.Name = "reclassificacaoPrioridadeCuidado";
          field.Type = TType.I32;
          field.ID = 21;
          oprot.WriteFieldBegin(field);
          oprot.WriteI32(ReclassificacaoPrioridadeCuidado);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("CuidadoCompartilhadoThrift(");
      __sb.Append(", UuidEvolucao: ");
      __sb.Append(UuidEvolucao);
      if (LotacaoEvolucao != null && __isset.lotacaoEvolucao) {
        __sb.Append(", LotacaoEvolucao: ");
        __sb.Append(LotacaoEvolucao== null ? "<null>" : LotacaoEvolucao.ToString());
      }
      if (__isset.dataEvolucao) {
        __sb.Append(", DataEvolucao: ");
        __sb.Append(DataEvolucao);
      }
      if (__isset.dataEvolucaoAnterior) {
        __sb.Append(", DataEvolucaoAnterior: ");
        __sb.Append(DataEvolucaoAnterior);
      }
      if (__isset.coSequencialEvolucao) {
        __sb.Append(", CoSequencialEvolucao: ");
        __sb.Append(CoSequencialEvolucao);
      }
      if (__isset.condutaEvolucao) {
        __sb.Append(", CondutaEvolucao: ");
        __sb.Append(CondutaEvolucao);
      }
      if (__isset.tpCdsOrigem) {
        __sb.Append(", TpCdsOrigem: ");
        __sb.Append(TpCdsOrigem);
      }
      if (CnsCidadao != null && __isset.cnsCidadao) {
        __sb.Append(", CnsCidadao: ");
        __sb.Append(CnsCidadao);
      }
      if (CpfCidadao != null && __isset.cpfCidadao) {
        __sb.Append(", CpfCidadao: ");
        __sb.Append(CpfCidadao);
      }
      if (__isset.sexoCidadao) {
        __sb.Append(", SexoCidadao: ");
        __sb.Append(SexoCidadao);
      }
      if (DataNascimentoCidadao != null && __isset.dataNascimentoCidadao) {
        __sb.Append(", DataNascimentoCidadao: ");
        __sb.Append(DataNascimentoCidadao);
      }
      __sb.Append(", UuidCuidadoCompartilhado: ");
      __sb.Append(UuidCuidadoCompartilhado);
      if (Solicitante != null && __isset.solicitante) {
        __sb.Append(", Solicitante: ");
        __sb.Append(Solicitante== null ? "<null>" : Solicitante.ToString());
      }
      if (Executante != null && __isset.executante) {
        __sb.Append(", Executante: ");
        __sb.Append(Executante== null ? "<null>" : Executante.ToString());
      }
      if (__isset.dataCriacaoCuidado) {
        __sb.Append(", DataCriacaoCuidado: ");
        __sb.Append(DataCriacaoCuidado);
      }
      if (Cid10 != null && __isset.cid10) {
        __sb.Append(", Cid10: ");
        __sb.Append(Cid10);
      }
      if (Ciap != null && __isset.ciap) {
        __sb.Append(", Ciap: ");
        __sb.Append(Ciap);
      }
      if (UuidFichaOrigem != null && __isset.uuidFichaOrigem) {
        __sb.Append(", UuidFichaOrigem: ");
        __sb.Append(UuidFichaOrigem);
      }
      if (__isset.tpDadoTranspFichaOrigem) {
        __sb.Append(", TpDadoTranspFichaOrigem: ");
        __sb.Append(TpDadoTranspFichaOrigem);
      }
      if (__isset.prioridadeCuidado) {
        __sb.Append(", PrioridadeCuidado: ");
        __sb.Append(PrioridadeCuidado);
      }
      if (__isset.reclassificacaoPrioridadeCuidado) {
        __sb.Append(", ReclassificacaoPrioridadeCuidado: ");
        __sb.Append(ReclassificacaoPrioridadeCuidado);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
