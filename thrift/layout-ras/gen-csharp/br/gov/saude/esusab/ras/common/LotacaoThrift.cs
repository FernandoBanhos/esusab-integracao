/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace br.gov.saude.esusab.ras.common
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class LotacaoThrift : TBase
  {
    private string _cpf;
    private string _cns;
    private string _cboCodigo_2002;
    private string _ine;
    private string _cnes;
    private string _codigoIbgeMunicipio;

    public string Cpf
    {
      get
      {
        return _cpf;
      }
      set
      {
        __isset.cpf = true;
        this._cpf = value;
      }
    }

    public string Cns
    {
      get
      {
        return _cns;
      }
      set
      {
        __isset.cns = true;
        this._cns = value;
      }
    }

    public string CboCodigo_2002
    {
      get
      {
        return _cboCodigo_2002;
      }
      set
      {
        __isset.cboCodigo_2002 = true;
        this._cboCodigo_2002 = value;
      }
    }

    public string Ine
    {
      get
      {
        return _ine;
      }
      set
      {
        __isset.ine = true;
        this._ine = value;
      }
    }

    public string Cnes
    {
      get
      {
        return _cnes;
      }
      set
      {
        __isset.cnes = true;
        this._cnes = value;
      }
    }

    public string CodigoIbgeMunicipio
    {
      get
      {
        return _codigoIbgeMunicipio;
      }
      set
      {
        __isset.codigoIbgeMunicipio = true;
        this._codigoIbgeMunicipio = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool cpf;
      public bool cns;
      public bool cboCodigo_2002;
      public bool ine;
      public bool cnes;
      public bool codigoIbgeMunicipio;
    }

    public LotacaoThrift() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                Cpf = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                Cns = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.String) {
                CboCodigo_2002 = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.String) {
                Ine = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.String) {
                Cnes = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 6:
              if (field.Type == TType.String) {
                CodigoIbgeMunicipio = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("LotacaoThrift");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (Cpf != null && __isset.cpf) {
          field.Name = "cpf";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Cpf);
          oprot.WriteFieldEnd();
        }
        if (Cns != null && __isset.cns) {
          field.Name = "cns";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Cns);
          oprot.WriteFieldEnd();
        }
        if (CboCodigo_2002 != null && __isset.cboCodigo_2002) {
          field.Name = "cboCodigo_2002";
          field.Type = TType.String;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(CboCodigo_2002);
          oprot.WriteFieldEnd();
        }
        if (Ine != null && __isset.ine) {
          field.Name = "ine";
          field.Type = TType.String;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Ine);
          oprot.WriteFieldEnd();
        }
        if (Cnes != null && __isset.cnes) {
          field.Name = "cnes";
          field.Type = TType.String;
          field.ID = 5;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Cnes);
          oprot.WriteFieldEnd();
        }
        if (CodigoIbgeMunicipio != null && __isset.codigoIbgeMunicipio) {
          field.Name = "codigoIbgeMunicipio";
          field.Type = TType.String;
          field.ID = 6;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(CodigoIbgeMunicipio);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("LotacaoThrift(");
      bool __first = true;
      if (Cpf != null && __isset.cpf) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Cpf: ");
        __sb.Append(Cpf);
      }
      if (Cns != null && __isset.cns) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Cns: ");
        __sb.Append(Cns);
      }
      if (CboCodigo_2002 != null && __isset.cboCodigo_2002) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CboCodigo_2002: ");
        __sb.Append(CboCodigo_2002);
      }
      if (Ine != null && __isset.ine) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Ine: ");
        __sb.Append(Ine);
      }
      if (Cnes != null && __isset.cnes) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Cnes: ");
        __sb.Append(Cnes);
      }
      if (CodigoIbgeMunicipio != null && __isset.codigoIbgeMunicipio) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("CodigoIbgeMunicipio: ");
        __sb.Append(CodigoIbgeMunicipio);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
