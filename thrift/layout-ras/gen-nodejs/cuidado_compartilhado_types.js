//
// Autogenerated by Thrift Compiler (0.9.3)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;

var common_ttypes = require('./common_types')


var ttypes = module.exports = {};
CuidadoCompartilhadoThrift = module.exports.CuidadoCompartilhadoThrift = function(args) {
  this.uuidEvolucao = null;
  this.lotacaoEvolucao = null;
  this.dataEvolucao = null;
  this.dataEvolucaoAnterior = null;
  this.coSequencialEvolucao = null;
  this.condutaEvolucao = null;
  this.tpCdsOrigem = null;
  this.cnsCidadao = null;
  this.cpfCidadao = null;
  this.sexoCidadao = null;
  this.dataNascimentoCidadao = null;
  this.uuidCuidadoCompartilhado = null;
  this.solicitante = null;
  this.executante = null;
  this.dataCriacaoCuidado = null;
  this.cid10 = null;
  this.ciap = null;
  this.uuidFichaOrigem = null;
  this.tpDadoTranspFichaOrigem = null;
  this.prioridadeCuidado = null;
  this.reclassificacaoPrioridadeCuidado = null;
  if (args) {
    if (args.uuidEvolucao !== undefined && args.uuidEvolucao !== null) {
      this.uuidEvolucao = args.uuidEvolucao;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field uuidEvolucao is unset!');
    }
    if (args.lotacaoEvolucao !== undefined && args.lotacaoEvolucao !== null) {
      this.lotacaoEvolucao = new common_ttypes.LotacaoThrift(args.lotacaoEvolucao);
    }
    if (args.dataEvolucao !== undefined && args.dataEvolucao !== null) {
      this.dataEvolucao = args.dataEvolucao;
    }
    if (args.dataEvolucaoAnterior !== undefined && args.dataEvolucaoAnterior !== null) {
      this.dataEvolucaoAnterior = args.dataEvolucaoAnterior;
    }
    if (args.coSequencialEvolucao !== undefined && args.coSequencialEvolucao !== null) {
      this.coSequencialEvolucao = args.coSequencialEvolucao;
    }
    if (args.condutaEvolucao !== undefined && args.condutaEvolucao !== null) {
      this.condutaEvolucao = args.condutaEvolucao;
    }
    if (args.tpCdsOrigem !== undefined && args.tpCdsOrigem !== null) {
      this.tpCdsOrigem = args.tpCdsOrigem;
    }
    if (args.cnsCidadao !== undefined && args.cnsCidadao !== null) {
      this.cnsCidadao = args.cnsCidadao;
    }
    if (args.cpfCidadao !== undefined && args.cpfCidadao !== null) {
      this.cpfCidadao = args.cpfCidadao;
    }
    if (args.sexoCidadao !== undefined && args.sexoCidadao !== null) {
      this.sexoCidadao = args.sexoCidadao;
    }
    if (args.dataNascimentoCidadao !== undefined && args.dataNascimentoCidadao !== null) {
      this.dataNascimentoCidadao = args.dataNascimentoCidadao;
    }
    if (args.uuidCuidadoCompartilhado !== undefined && args.uuidCuidadoCompartilhado !== null) {
      this.uuidCuidadoCompartilhado = args.uuidCuidadoCompartilhado;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field uuidCuidadoCompartilhado is unset!');
    }
    if (args.solicitante !== undefined && args.solicitante !== null) {
      this.solicitante = new common_ttypes.LotacaoThrift(args.solicitante);
    }
    if (args.executante !== undefined && args.executante !== null) {
      this.executante = new common_ttypes.LotacaoThrift(args.executante);
    }
    if (args.dataCriacaoCuidado !== undefined && args.dataCriacaoCuidado !== null) {
      this.dataCriacaoCuidado = args.dataCriacaoCuidado;
    }
    if (args.cid10 !== undefined && args.cid10 !== null) {
      this.cid10 = args.cid10;
    }
    if (args.ciap !== undefined && args.ciap !== null) {
      this.ciap = args.ciap;
    }
    if (args.uuidFichaOrigem !== undefined && args.uuidFichaOrigem !== null) {
      this.uuidFichaOrigem = args.uuidFichaOrigem;
    }
    if (args.tpDadoTranspFichaOrigem !== undefined && args.tpDadoTranspFichaOrigem !== null) {
      this.tpDadoTranspFichaOrigem = args.tpDadoTranspFichaOrigem;
    }
    if (args.prioridadeCuidado !== undefined && args.prioridadeCuidado !== null) {
      this.prioridadeCuidado = args.prioridadeCuidado;
    }
    if (args.reclassificacaoPrioridadeCuidado !== undefined && args.reclassificacaoPrioridadeCuidado !== null) {
      this.reclassificacaoPrioridadeCuidado = args.reclassificacaoPrioridadeCuidado;
    }
  }
};
CuidadoCompartilhadoThrift.prototype = {};
CuidadoCompartilhadoThrift.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.uuidEvolucao = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.lotacaoEvolucao = new common_ttypes.LotacaoThrift();
        this.lotacaoEvolucao.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I64) {
        this.dataEvolucao = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I64) {
        this.dataEvolucaoAnterior = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.coSequencialEvolucao = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.I64) {
        this.condutaEvolucao = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 7:
      if (ftype == Thrift.Type.I32) {
        this.tpCdsOrigem = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 8:
      if (ftype == Thrift.Type.STRING) {
        this.cnsCidadao = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 9:
      if (ftype == Thrift.Type.STRING) {
        this.cpfCidadao = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 10:
      if (ftype == Thrift.Type.I64) {
        this.sexoCidadao = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 11:
      if (ftype == Thrift.Type.STRING) {
        this.dataNascimentoCidadao = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 12:
      if (ftype == Thrift.Type.STRING) {
        this.uuidCuidadoCompartilhado = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 13:
      if (ftype == Thrift.Type.STRUCT) {
        this.solicitante = new common_ttypes.LotacaoThrift();
        this.solicitante.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 14:
      if (ftype == Thrift.Type.STRUCT) {
        this.executante = new common_ttypes.LotacaoThrift();
        this.executante.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 15:
      if (ftype == Thrift.Type.I64) {
        this.dataCriacaoCuidado = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 16:
      if (ftype == Thrift.Type.STRING) {
        this.cid10 = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 17:
      if (ftype == Thrift.Type.STRING) {
        this.ciap = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 18:
      if (ftype == Thrift.Type.STRING) {
        this.uuidFichaOrigem = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 19:
      if (ftype == Thrift.Type.I32) {
        this.tpDadoTranspFichaOrigem = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 20:
      if (ftype == Thrift.Type.I32) {
        this.prioridadeCuidado = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 21:
      if (ftype == Thrift.Type.I32) {
        this.reclassificacaoPrioridadeCuidado = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CuidadoCompartilhadoThrift.prototype.write = function(output) {
  output.writeStructBegin('CuidadoCompartilhadoThrift');
  if (this.uuidEvolucao !== null && this.uuidEvolucao !== undefined) {
    output.writeFieldBegin('uuidEvolucao', Thrift.Type.STRING, 1);
    output.writeString(this.uuidEvolucao);
    output.writeFieldEnd();
  }
  if (this.lotacaoEvolucao !== null && this.lotacaoEvolucao !== undefined) {
    output.writeFieldBegin('lotacaoEvolucao', Thrift.Type.STRUCT, 2);
    this.lotacaoEvolucao.write(output);
    output.writeFieldEnd();
  }
  if (this.dataEvolucao !== null && this.dataEvolucao !== undefined) {
    output.writeFieldBegin('dataEvolucao', Thrift.Type.I64, 3);
    output.writeI64(this.dataEvolucao);
    output.writeFieldEnd();
  }
  if (this.dataEvolucaoAnterior !== null && this.dataEvolucaoAnterior !== undefined) {
    output.writeFieldBegin('dataEvolucaoAnterior', Thrift.Type.I64, 4);
    output.writeI64(this.dataEvolucaoAnterior);
    output.writeFieldEnd();
  }
  if (this.coSequencialEvolucao !== null && this.coSequencialEvolucao !== undefined) {
    output.writeFieldBegin('coSequencialEvolucao', Thrift.Type.I32, 5);
    output.writeI32(this.coSequencialEvolucao);
    output.writeFieldEnd();
  }
  if (this.condutaEvolucao !== null && this.condutaEvolucao !== undefined) {
    output.writeFieldBegin('condutaEvolucao', Thrift.Type.I64, 6);
    output.writeI64(this.condutaEvolucao);
    output.writeFieldEnd();
  }
  if (this.tpCdsOrigem !== null && this.tpCdsOrigem !== undefined) {
    output.writeFieldBegin('tpCdsOrigem', Thrift.Type.I32, 7);
    output.writeI32(this.tpCdsOrigem);
    output.writeFieldEnd();
  }
  if (this.cnsCidadao !== null && this.cnsCidadao !== undefined) {
    output.writeFieldBegin('cnsCidadao', Thrift.Type.STRING, 8);
    output.writeString(this.cnsCidadao);
    output.writeFieldEnd();
  }
  if (this.cpfCidadao !== null && this.cpfCidadao !== undefined) {
    output.writeFieldBegin('cpfCidadao', Thrift.Type.STRING, 9);
    output.writeString(this.cpfCidadao);
    output.writeFieldEnd();
  }
  if (this.sexoCidadao !== null && this.sexoCidadao !== undefined) {
    output.writeFieldBegin('sexoCidadao', Thrift.Type.I64, 10);
    output.writeI64(this.sexoCidadao);
    output.writeFieldEnd();
  }
  if (this.dataNascimentoCidadao !== null && this.dataNascimentoCidadao !== undefined) {
    output.writeFieldBegin('dataNascimentoCidadao', Thrift.Type.STRING, 11);
    output.writeString(this.dataNascimentoCidadao);
    output.writeFieldEnd();
  }
  if (this.uuidCuidadoCompartilhado !== null && this.uuidCuidadoCompartilhado !== undefined) {
    output.writeFieldBegin('uuidCuidadoCompartilhado', Thrift.Type.STRING, 12);
    output.writeString(this.uuidCuidadoCompartilhado);
    output.writeFieldEnd();
  }
  if (this.solicitante !== null && this.solicitante !== undefined) {
    output.writeFieldBegin('solicitante', Thrift.Type.STRUCT, 13);
    this.solicitante.write(output);
    output.writeFieldEnd();
  }
  if (this.executante !== null && this.executante !== undefined) {
    output.writeFieldBegin('executante', Thrift.Type.STRUCT, 14);
    this.executante.write(output);
    output.writeFieldEnd();
  }
  if (this.dataCriacaoCuidado !== null && this.dataCriacaoCuidado !== undefined) {
    output.writeFieldBegin('dataCriacaoCuidado', Thrift.Type.I64, 15);
    output.writeI64(this.dataCriacaoCuidado);
    output.writeFieldEnd();
  }
  if (this.cid10 !== null && this.cid10 !== undefined) {
    output.writeFieldBegin('cid10', Thrift.Type.STRING, 16);
    output.writeString(this.cid10);
    output.writeFieldEnd();
  }
  if (this.ciap !== null && this.ciap !== undefined) {
    output.writeFieldBegin('ciap', Thrift.Type.STRING, 17);
    output.writeString(this.ciap);
    output.writeFieldEnd();
  }
  if (this.uuidFichaOrigem !== null && this.uuidFichaOrigem !== undefined) {
    output.writeFieldBegin('uuidFichaOrigem', Thrift.Type.STRING, 18);
    output.writeString(this.uuidFichaOrigem);
    output.writeFieldEnd();
  }
  if (this.tpDadoTranspFichaOrigem !== null && this.tpDadoTranspFichaOrigem !== undefined) {
    output.writeFieldBegin('tpDadoTranspFichaOrigem', Thrift.Type.I32, 19);
    output.writeI32(this.tpDadoTranspFichaOrigem);
    output.writeFieldEnd();
  }
  if (this.prioridadeCuidado !== null && this.prioridadeCuidado !== undefined) {
    output.writeFieldBegin('prioridadeCuidado', Thrift.Type.I32, 20);
    output.writeI32(this.prioridadeCuidado);
    output.writeFieldEnd();
  }
  if (this.reclassificacaoPrioridadeCuidado !== null && this.reclassificacaoPrioridadeCuidado !== undefined) {
    output.writeFieldBegin('reclassificacaoPrioridadeCuidado', Thrift.Type.I32, 21);
    output.writeI32(this.reclassificacaoPrioridadeCuidado);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

